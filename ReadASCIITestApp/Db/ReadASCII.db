#ReadASCII
###################
record(waveform, "$(P)DIRBASE:SP")
{
   field(DTYP, "asynOctetWrite")
   field(INP, "@asyn($(READ),0,1)DIRBASE")
   field(PINI, "NO")
   field(FTVL, "CHAR")
   field(NELM, 256)
}

record(waveform, "$(P)DIRBASE")
{
   field(DTYP, "asynOctetRead")
   field(INP, "@asyn($(READ),0,1)DIRBASE")
   field(PINI, "YES")
   field(FTVL, "CHAR")
   field(NELM, 256)
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)RAMP_FILE")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(READ),0,1)DIR")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)RAMP_FILE_CHANGED")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(READ),0,1)LUTCG")
    field(SCAN, "I/O Intr")
}

record(stringout, "$(P)RAMP_FILE:SP")
{
   field(DTYP, "asynOctetWrite")
   field(OUT,  "@asyn($(READ),0,1)DIR")
}

record(ao, "$(P)VAL:SP")
{
   field(DESC, "The value setpoint")
   field(DTYP, "asynFloat64")
   field(OUT, "@asyn($(READ),0,1)TGT")
}

record(ai, "$(P)RATE")
{
   field(DESC, "Rate the ramp increases/decreases")
   field(DTYP, "asynFloat64")
   field(INP, "@asyn($(READ),0,1)RATE")
   field(EGU, "1/min")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)RATE:SP")
{
   field(DESC, "Rate the ramp increases/decreases")
   field(DTYP, "asynFloat64")
   field(OUT, "@asyn($(READ),0,1)RATE")
   field(EGU, "K/min")
}

record(bi, "$(P)RAMPING")
{
   field(DESC, "High if ramp is executing")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(READ),0,1)CURRMP")
   field(SCAN, "I/O Intr")   
   field(ZNAM, "NO")
   field(ONAM, "YES")
}

## The ramp will stop when this matches the set point that the ramp is outputting (OUT_SP)
record(ao, "$(P)CURRENT_VAL")
{
    field(DESC, "The readback of the ramping val")
	field(DTYP, "asynFloat64")
	field(OUT, "@asyn($(READ),0,1)CUR")
}

record(bo, "$(P)RAMPON")
{
   field(DESC, "Toggles the SP ramp")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(READ),0,1)RMP")
}

record(bo, "$(P)LUTON")
{
   field(DESC, "Toggles the PID lookup")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(READ),0,1)LUT")
   field(ZNAM, "0")
   field(ONAM, "1")
}

record(bi, "$(P)LUTON:RBV")
{
   field(DESC, "PID lookup readback")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(READ),0,1)LUT")
   field(ZNAM, "0")
   field(ONAM, "1")
   field(SCAN, "I/O Intr")
}

record(ai, "$(P)OUT_SP")
{
   field(DESC, "The value that the ramp is setting")
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(READ),0,1)SP")
   field(PREC, "5")
   field(SCAN, "I/O Intr")
}

record(ai, "$(P)OUT_P")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(READ),0,1)P")
   field(PREC, "5")
   field(SCAN, "I/O Intr")
}

record(ai, "$(P)OUT_I")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(READ),0,1)I")
   field(PREC, "5")
   field(SCAN, "I/O Intr")
}

record(ai, "$(P)OUT_D")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(READ),0,1)D")
   field(PREC, "5")
   field(SCAN, "I/O Intr")
}

record(ai, "$(P)OUT_MAX")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(READ),0,1)MH")
   field(PREC, "5")
   field(SCAN, "I/O Intr")
}
